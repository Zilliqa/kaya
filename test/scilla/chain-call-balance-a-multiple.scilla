scilla_version 0

library Test

let two_msgs =
  fun (msg1 : Message) =>
  fun (msg2 : Message) =>
    let nil_msg = Nil {Message} in
    let one_msg = Cons {Message} msg2 nil_msg in
    Cons {Message} msg1 one_msg

contract Test
()

field last_amount: Uint128 = Uint128 0

(* Call contrB, passing contrC to it. Also pass on _amount. Emit event. *)
transition acceptAAndTransferToBAndCallC (addrB : ByStr20, addrC : ByStr20)
  accept;

  last_amount := _amount;
  half_amount =
    let two = Uint128 2 in
      builtin div _amount two;

  e = {_eventname: "A"};
  event e;

  msg1 = { _tag : "acceptBAndTransferToC"; _amount : half_amount; _recipient : addrB; addrC : addrC };
  msg2 = { _tag : "simplyAccept"; _amount : half_amount; _recipient : addrC };
  msgs = two_msgs msg1 msg2;
  send msgs
end

transition simplyAccept ()
  accept;

  last_amount := _amount;

  e = {_eventname: "B"};
  event e
end
